========== git 사용법 ==========
git add {file}
git commit -m '주석'
git status
git remote -v
git push origin master

jdk-6u34-windows-x64 (설치 버전)
eclipse-jee-kepler-SR2-win32-x86_64

#프로젝트 생성 
Dynamic web project 생성
configure > convert maven

eclispe.ini
-Dfile.encoding=utf-8 <-- 이부분 추가


========== component-scan ========== 
component-scan 을 controller 하고 service 이하단을 구분해서 선언하는 이유는
controller 는 WEB-INF 의 이하에서만 적용이 가능하기 때문에
공통적으로 사용할수 없고 해당 context에서만 사용 가능하다. 

서블릿컨텍스트에는 
<context:component-scan base-package="com.binr" use-default-filters="false">
  <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
</context:component-scan>
기본 패키지에서 @Conponent, @Service, @Repository와 같은 스트레오애노테이션을 제외하고(use-default-filters="false") @Controller로 표현된 클래스만 빈으로 만 등록

루트컨텍스트에서는 
<context:component-scan base-package="com.binr" use-default-filters="false">
  <context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
  <context:include-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
</context:component-scan>.
기본 패키지에서 @Conponent, @Service, @Repository와 같은 스트레오애노테이션을 제외하고(use-default-filters="false") @Service,@Repository로 표현된 클래스만 빈으로 만 등록

========== log4j 설정 방법 ==========  
** pom.xml
<dependencies>
 <dependency>
 <groupId>org.apache.logging.log4j</groupId>
 <artifactId>log4j-api</artifactId>
 <version>2.0-beta6</version>
 </dependency>
 <dependency>
 <groupId>org.apache.logging.log4j</groupId>
 <artifactId>log4j-core</artifactId>
 <version>2.0-beta6</version>
 </dependency>
</dependencies>